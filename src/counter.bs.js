// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Counter");

function make(onReset, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var reduce = param[/* reduce */1];
      return React.createElement("div", undefined, React.createElement("div", undefined, Pervasives.string_of_int(param[/* state */2])), React.createElement("button", {
                      onClick: Curry._1(reduce, (function () {
                              return /* Increment */Block.__(0, [1]);
                            }))
                    }, "+"), React.createElement("button", {
                      onClick: Curry._1(reduce, (function () {
                              return /* Increment */Block.__(0, [2]);
                            }))
                    }, "+2"), React.createElement("button", {
                      onClick: Curry._1(reduce, (function () {
                              return /* Decrement */Block.__(1, [1]);
                            }))
                    }, "-"), React.createElement("button", {
                      onClick: Curry._1(reduce, (function () {
                              return /* Reset */0;
                            }))
                    }, "reset"));
    });
  newrecord[/* initialState */10] = (function () {
      return 0;
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (typeof action === "number") {
        return /* UpdateWithSideEffects */Block.__(3, [
                  0,
                  (function () {
                      return Curry._1(onReset, /* () */0);
                    })
                ]);
      } else if (action.tag) {
        return /* Update */Block.__(0, [state - action[0] | 0]);
      } else {
        return /* Update */Block.__(0, [state + action[0] | 0]);
      }
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
